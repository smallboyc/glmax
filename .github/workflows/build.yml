name: Build

on:
  push:
    branches: [main]
    paths-ignore:
      - "**.md"
  pull_request:
    branches: [main]

env:
  cmake_configure_args: ""
  cmakelists_folder: "."
  cmake_target: ImGuiTemplate

jobs:
  build:
    name: ${{matrix.config.name}} ${{matrix.build_type}}
    runs-on: ${{matrix.config.os}}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
              name: Windows MSVC,
              os: windows-latest,
              cmake_configure_args: -D CMAKE_C_COMPILER=cl CMAKE_CXX_COMPILER=cl -G Ninja,
            }
          - {
              name: Windows Clang,
              os: windows-latest,
              cmake_configure_args: -T ClangCL,
            }
          - {
              name: Linux Clang,
              os: ubuntu-latest,
              cmake_configure_args: -D CMAKE_C_COMPILER=clang -D CMAKE_CXX_COMPILER=clang++ -G Ninja,
            }
          - {
              name: Linux GCC,
              os: ubuntu-latest,
              cmake_configure_args: -D CMAKE_C_COMPILER=gcc -D CMAKE_CXX_COMPILER=g++ -G Ninja,
            }
          - {
              name: MacOS Clang,
              os: macos-latest,
              cmake_configure_args: -D CMAKE_C_COMPILER=clang -D CMAKE_CXX_COMPILER=clang++ -G Ninja,
            }
        build_type:
          - Debug
          - Release

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up MSVC # NOTE: required to find cl.exe when using the Ninja generator. And we need to use Ninja in order for ccache to be able to cache stuff with MSVC.
        if: matrix.config.name == 'Windows MSVC'
        uses: ilammy/msvc-dev-cmd@v1.13.0

      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev mesa-common-dev build-essential libgtk-3-dev

      - name: ccache
        uses: hendrikmuhs/ccache-action@main
        with:
          key: ${{matrix.config.name}}-${{matrix.build_type}}

      - name: Build
        uses: lukka/run-cmake@v3
        with:
          cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
          cmakeListsTxtPath: ${{github.workspace}}/${{env.cmakelists_folder}}/CMakeLists.txt
          cmakeAppendedArgs: ${{env.cmake_configure_args}} -D CMAKE_BUILD_TYPE=${{matrix.build_type}} ${{matrix.config.cmake_configure_args}} -D CMAKE_C_COMPILER_LAUNCHER=ccache -D CMAKE_CXX_COMPILER_LAUNCHER=ccache
          buildWithCMakeArgs: --config ${{matrix.build_type}} --target ${{env.cmake_target}}
          cmakeBuildType: ${{matrix.build_type}}
          buildDirectory: ${{github.workspace}}/build
